generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(USER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  
  documents Document[]
}

enum Role {
  USER
  ADMIN
}

enum DocumentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model Document {
  id           String         @id @default(uuid())
  userId       String
  filename     String         // Nome único do arquivo no sistema
  originalName String         // Nome original do arquivo
  mimeType     String
  size         Int
  status       DocumentStatus @default(PENDING)
  filePath     String         // Caminho para o arquivo
  extractedText String?       @db.Text // Texto extraído do PDF
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  analysis     DocumentAnalysis?
  
  @@map("documents")
}

model DocumentAnalysis {
  id          String   @id @default(uuid())
  documentId  String   @unique
  summary     String   @db.Text
  keywords    String[] // Array de palavras-chave
  mindMap     Json     // Estrutura do mapa mental em JSON
  questions   Json     // Array de questões em JSON
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  document    Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  
  @@map("document_analyses")
}
